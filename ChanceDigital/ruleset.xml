<?xml version="1.0"?>
<ruleset name="ChanceDigital">
	<description>Chance Digital Coding Standards</description>

	<file>.</file>

	<exclude-pattern>*/phpunit.xml*</exclude-pattern>
	<exclude-pattern>*/vendor/*</exclude-pattern>
	<exclude-pattern>*/node_modules/*</exclude-pattern>
	<exclude-pattern>*/build/*</exclude-pattern>
	<exclude-pattern>*/tests/*</exclude-pattern>
	<exclude-pattern>*/dist/*</exclude-pattern>
	<exclude-pattern>*\.(css|scss|js)</exclude-pattern>

	<autoload>./bootstrap.php</autoload>

	<rule ref="Internal.NoCodeFound">
		<severity>0</severity>
	</rule>

	<!-- For CI, don't fail on warnings -->
	<config name="ignore_warnings_on_exit" value="1"/>

	<!-- Include everything in the Extra standard, with exclusions -->
	<rule ref="WordPress-Extra">

		<!-- Allow extra spaces after commas in functions. -->
		<exclude name="Generic.Functions.FunctionCallArgumentSpacing.TooMuchSpaceAfterComma" />

		<!-- Allow with or without semicolons. -->
		<exclude name="Squiz.PHP.EmbeddedPhp.NoSemicolon" />

		<!-- Require versions for enqueued assets. -->
		<exclude name="WordPress.WP.EnqueuedResourceParameters.MissingVersion" />

		<!-- Exclude other conflicting rules. -->
		<exclude name="WordPress.Arrays.MultipleStatementAlignment.DoubleArrowNotAligned" />
		<exclude name="WordPress.PHP.DevelopmentFunctions.error_log_trigger_error" />
		<exclude name="Generic.Formatting.MultipleStatementAlignment.NotSameWarning" />

		<!-- Meh, Yodas -->
		<exclude name="WordPress.PHP.YodaConditions" />

		<!-- Allow empty catch statements -->
		<exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedCatch"/>

		<!-- Ignore comment punctuation -->
		<exclude name="Squiz.Commenting.FunctionComment.ParamCommentFullStop"/>
		<exclude name="Squiz.Commenting.FunctionComment.ThrowsNoFullStop"/>
	</rule>

	<!-- Allow the use of filesystem functions -->
	<rule ref="WordPress.WP.AlternativeFunctions">
		<properties>
			<property name="exclude" value="file_get_contents,file_system_read" />
		</properties>
	</rule>

	<!-- Allow . in hook names -->
	<rule ref="WordPress.NamingConventions.ValidHookName">
		<properties>
			<property name="additionalWordDelimiters" value="."/>
		</properties>
	</rule>

	<!-- Check for unique handle when registering plugins -->
	<rule ref="WordPress.Security.PluginMenuSlug" />
	<rule ref="WordPress.Security.PluginMenuSlug.Using__FILE__">
		<type>error</type>
	</rule>

	<!-- Prefer alignment over line length -->
	<rule ref="WordPress.Arrays.MultipleStatementAlignment">
		<properties>
			<property name="maxColumn" value="1000"/>
		</properties>
	</rule>

	<!-- Restore the ability to have multiple arguments per line -->
	<rule ref="PEAR.Functions.FunctionCallSignature">
		<properties>
			<property name="allowMultipleArguments" value="true"/>
		</properties>
	</rule>
	<rule ref="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket">
		<severity phpcs-only="true">0</severity>
	</rule>
	<rule ref="PEAR.Functions.FunctionCallSignature.CloseBracketLine">
		<severity phpcs-only="true">0</severity>
	</rule>

	<!--
	Chance Digital Rules
	Starting from Human Made standards: http://engineering.hmn.md/style/php/
	-->

	<!-- Namespacing: Required for classes -->
	<rule ref="PSR1.Classes.ClassDeclaration" />

	<!-- Namespacing: Required for functions -->
	<rule ref="PSR2.Namespaces.NamespaceDeclaration" />

	<!-- Namespacing: `use` statements -->
	<rule ref="PSR2.Namespaces.UseDeclaration">
		<exclude name="PSR2.Namespaces.UseDeclaration.MultipleDeclarations" />
	</rule>
	<rule ref="PSR2R.Namespaces.UnusedUseStatement" />
	<rule ref="PSR2R.Namespaces.UseInAlphabeticalOrder" />

	<!-- Namespacing: No backslash with `use` -->
	<!-- Handled in Namespaces/NoLeadingSlashOnUseSniff -->

	<!-- Ban inline assignment in control structures. -->
	<rule ref="PSR2R.ControlStructures.NoInlineAssignment" />

	<!-- Anonymous Functions: Spaces after `function` and `use` -->
	<!-- Handled in Squiz.Functions.MultiLineFunctionDeclaration -->

	<!-- Inline Statements: Single statement on same line -->
	<rule ref="Generic.Formatting.DisallowMultipleStatements"/>

	<!-- Array Creation: Short Syntax -->
	<rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

	<rule ref="WordPress.WP.I18n.MissingTranslatorsComment">
		<type>warning</type>
	</rule>
	<rule ref="WordPress.WP.GlobalVariablesOverride.OverrideProhibited">
		<type>warning</type>
	</rule>

	<config name="minimum_supported_wp_version" value="4.9" />
</ruleset>
